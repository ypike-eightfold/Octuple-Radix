import{j as r}from"./jsx-runtime-Cf8x2fCZ.js";import{r as p,R as Ce}from"./index-BlmOqGMO.js";import{I as u}from"./Icon-D_u5oAGh.js";import{p as o}from"./flex-DvmXTkye.js";import{o as I}from"./card-B3UzYjvl.js";import{p as l}from"./text-C4SbqUme.js";import{o as O}from"./button-DOEX7M_0.js";import{s as V}from"./progress-CewqBrwS.js";import"./index-yBjzXJbu.js";import"./index-Dbpq9gcs.js";import"./index-CSHYywJy.js";import"./color.prop-n6xztqZx.js";import"./high-contrast.prop-BhzBAZU8.js";import"./base-button-1bStz9fB.js";import"./radius.prop-CIarg28h.js";import"./index-UwpWBZco.js";import"./index-CiEb6DFw.js";import"./index-47vA16Eq.js";import"./index-B6ujFmsw.js";import"./map-prop-values-CWqpaS2P.js";import"./index-Dkb_ZYRU.js";function a({accept:n,maxSize:de=10*1024*1024,multiple:me=!0,variant:ue="default",onFilesSelected:U,onUploadProgress:b}){const[d,k]=p.useState([]),[m,D]=p.useState(!1),_=Ce.useRef(null),c=ue==="compact",ge=c?"400px":"600px",fe=c?"16px":"32px",xe=48,he=c?"2":"3",g=p.useCallback(e=>{if(!e)return;const t=Array.from(e).map(i=>({file:i,progress:0,status:"pending"}));k(i=>[...i,...t]),U&&U(Array.from(e)),t.forEach((i,s)=>{ve(d.length+s)})},[d.length,U]),ve=e=>{const t=setInterval(()=>{k(i=>{const s=[...i];return s[e]&&(s[e].status="uploading",s[e].progress+=10,s[e].progress>=100&&(s[e].progress=100,s[e].status="complete",clearInterval(t)),b&&b(s[e].progress)),s})},200)},je=p.useCallback(e=>{e.preventDefault(),D(!0)},[]),ye=p.useCallback(e=>{e.preventDefault(),D(!1)},[]),Se=p.useCallback(e=>{e.preventDefault(),D(!1),g(e.dataTransfer.files)},[g]),ze=p.useCallback(e=>{g(e.target.files)},[g]),M=e=>{k(t=>t.filter((i,s)=>s!==e))},F=e=>e<1024?e+" B":e<1024*1024?(e/1024).toFixed(1)+" KB":(e/(1024*1024)).toFixed(1)+" MB";return r.jsxs(o,{direction:"column",gap:"4",style:{width:"100%",maxWidth:ge},children:[r.jsxs(I,{style:{padding:fe,border:m?"2px dashed var(--accent-9)":"2px dashed var(--gray-6)",background:m?"var(--accent-2)":"var(--gray-2)",cursor:"pointer",transition:"all 0.2s"},onDragOver:je,onDragLeave:ye,onDrop:Se,onClick:()=>{var e;return(e=_.current)==null?void 0:e.click()},children:[c?r.jsxs(o,{gap:"3",align:"center",children:[r.jsx(u,{name:"cloud_upload",size:48,color:m?"var(--accent-9)":"var(--gray-9)"}),r.jsxs(o,{direction:"column",gap:"1",style:{flex:1},children:[r.jsx(l,{size:"3",weight:"medium",children:m?"Drop files here":"Drag & drop files"}),r.jsx(l,{size:"2",color:"gray",children:n?`(${n.replace(/[.*]/g,"").replace(/,/g,", ")})`:"or click to browse"})]})]}):r.jsxs(o,{direction:"column",align:"center",gap:he,children:[r.jsx(u,{name:"cloud_upload",size:xe,color:m?"var(--accent-9)":"var(--gray-9)"}),r.jsx(l,{size:"4",weight:"medium",align:"center",children:m?"Drop files here":"Drag & drop files here"}),r.jsx(l,{size:"2",color:"gray",align:"center",children:"or click to browse"}),r.jsxs(l,{size:"1",color:"gray",align:"center",children:["Max file size: ",F(de)]})]}),r.jsx("input",{ref:_,type:"file",accept:n,multiple:me,onChange:ze,style:{display:"none"}})]}),d.length>0&&r.jsxs(o,{direction:"column",gap:"2",children:[r.jsx(l,{size:"2",weight:"bold",children:c?`Files (${d.length})`:`Uploaded Files (${d.length})`}),d.map((e,t)=>r.jsx(I,{children:c?r.jsxs(o,{direction:"column",gap:"1",children:[r.jsx(o,{gap:"2",align:"center",justify:"between",children:r.jsxs(o,{gap:"2",align:"center",style:{flex:1,minWidth:0},children:[r.jsx(u,{name:e.status==="complete"?"check_circle":e.status==="error"?"error":"description",size:16,color:e.status==="complete"?"var(--green-9)":e.status==="error"?"var(--red-9)":"var(--gray-9)"}),r.jsx(l,{size:"1",weight:"medium",style:{flex:1,overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},children:e.file.name}),r.jsx(l,{size:"1",color:"gray",style:{flexShrink:0},children:F(e.file.size)}),r.jsx(O,{variant:"ghost",size:"1",color:"red",onClick:()=>M(t),children:r.jsx(u,{name:"close",size:12})})]})}),e.status!=="complete"&&e.status!=="error"&&r.jsx(V,{value:e.progress,size:"1"})]}):r.jsxs(o,{direction:"column",gap:"2",children:[r.jsxs(o,{justify:"between",align:"center",children:[r.jsxs(o,{gap:"2",align:"center",style:{flex:1},children:[r.jsx(u,{name:e.status==="complete"?"check_circle":e.status==="error"?"error":"description",size:20,color:e.status==="complete"?"var(--green-9)":e.status==="error"?"var(--red-9)":"var(--gray-9)"}),r.jsxs(o,{direction:"column",style:{flex:1,minWidth:0},children:[r.jsx(l,{size:"2",weight:"medium",style:{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},children:e.file.name}),r.jsx(l,{size:"1",color:"gray",children:F(e.file.size)})]})]}),r.jsx(O,{variant:"ghost",size:"1",color:"red",onClick:()=>M(t),children:r.jsx(u,{name:"close",size:16})})]}),e.status!=="complete"&&e.status!=="error"&&r.jsx(V,{value:e.progress,size:"1"})]})},t))]})]})}try{a.displayName="Uploader",a.__docgenInfo={description:"",displayName:"Uploader",props:{accept:{defaultValue:null,description:'Accept file types (e.g., "image/*", ".pdf,.doc")',name:"accept",required:!1,type:{name:"string | undefined"}},maxSize:{defaultValue:{value:"10 * 1024 * 1024"},description:"Maximum file size in bytes",name:"maxSize",required:!1,type:{name:"number | undefined"}},multiple:{defaultValue:{value:"true"},description:"Allow multiple files",name:"multiple",required:!1,type:{name:"boolean | undefined"}},variant:{defaultValue:{value:"default"},description:"Visual variant of the uploader",name:"variant",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"default"'},{value:'"compact"'}]}},onFilesSelected:{defaultValue:null,description:"Callback when files are selected",name:"onFilesSelected",required:!1,type:{name:"((files: File[]) => void) | undefined"}},onUploadProgress:{defaultValue:null,description:"Callback for upload progress",name:"onUploadProgress",required:!1,type:{name:"((progress: number) => void) | undefined"}}}}}catch{}const He={title:"Components/Uploader",component:a,parameters:{layout:"padded"},tags:["autodocs"]},f={render:()=>r.jsx(a,{})},x={render:()=>r.jsx(a,{multiple:!1})},h={render:()=>r.jsx(a,{accept:"image/*"})},v={render:()=>r.jsx(a,{accept:".pdf,.doc,.docx,.txt"})},j={render:()=>r.jsx(a,{maxSize:2*1024*1024})},y={render:()=>r.jsx(a,{onFilesSelected:n=>{console.log("Files selected:",n)},onUploadProgress:n=>{console.log("Upload progress:",n)}})},S={render:()=>r.jsx(a,{variant:"compact"})},z={render:()=>r.jsx(a,{variant:"compact",multiple:!0,accept:".doc,.docx,.pdf,.txt"})},C={render:()=>r.jsx(a,{variant:"compact",multiple:!1,accept:"image/*"})},w={render:()=>r.jsx(a,{variant:"compact",maxSize:2*1024*1024,multiple:!0})};var q,A,B;f.parameters={...f.parameters,docs:{...(q=f.parameters)==null?void 0:q.docs,source:{originalSource:`{
  render: () => <Uploader />
}`,...(B=(A=f.parameters)==null?void 0:A.docs)==null?void 0:B.source}}};var R,$,E;x.parameters={...x.parameters,docs:{...(R=x.parameters)==null?void 0:R.docs,source:{originalSource:`{
  render: () => <Uploader multiple={false} />
}`,...(E=($=x.parameters)==null?void 0:$.docs)==null?void 0:E.source}}};var N,K,T;h.parameters={...h.parameters,docs:{...(N=h.parameters)==null?void 0:N.docs,source:{originalSource:`{
  render: () => <Uploader accept="image/*" />
}`,...(T=(K=h.parameters)==null?void 0:K.docs)==null?void 0:T.source}}};var G,H,J;v.parameters={...v.parameters,docs:{...(G=v.parameters)==null?void 0:G.docs,source:{originalSource:`{
  render: () => <Uploader accept=".pdf,.doc,.docx,.txt" />
}`,...(J=(H=v.parameters)==null?void 0:H.docs)==null?void 0:J.source}}};var L,Q,X;j.parameters={...j.parameters,docs:{...(L=j.parameters)==null?void 0:L.docs,source:{originalSource:`{
  render: () => <Uploader maxSize={2 * 1024 * 1024} /> // 2MB limit
}`,...(X=(Q=j.parameters)==null?void 0:Q.docs)==null?void 0:X.source}}};var Y,Z,W;y.parameters={...y.parameters,docs:{...(Y=y.parameters)==null?void 0:Y.docs,source:{originalSource:`{
  render: () => <Uploader onFilesSelected={files => {
    console.log('Files selected:', files);
  }} onUploadProgress={progress => {
    console.log('Upload progress:', progress);
  }} />
}`,...(W=(Z=y.parameters)==null?void 0:Z.docs)==null?void 0:W.source}}};var P,ee,re;S.parameters={...S.parameters,docs:{...(P=S.parameters)==null?void 0:P.docs,source:{originalSource:`{
  render: () => <Uploader variant="compact" />
}`,...(re=(ee=S.parameters)==null?void 0:ee.docs)==null?void 0:re.source}}};var ae,se,oe;z.parameters={...z.parameters,docs:{...(ae=z.parameters)==null?void 0:ae.docs,source:{originalSource:`{
  render: () => <Uploader variant="compact" multiple accept=".doc,.docx,.pdf,.txt" />
}`,...(oe=(se=z.parameters)==null?void 0:se.docs)==null?void 0:oe.source}}};var te,le,ne;C.parameters={...C.parameters,docs:{...(te=C.parameters)==null?void 0:te.docs,source:{originalSource:`{
  render: () => <Uploader variant="compact" multiple={false} accept="image/*" />
}`,...(ne=(le=C.parameters)==null?void 0:le.docs)==null?void 0:ne.source}}};var ce,ie,pe;w.parameters={...w.parameters,docs:{...(ce=w.parameters)==null?void 0:ce.docs,source:{originalSource:`{
  render: () => <Uploader variant="compact" maxSize={2 * 1024 * 1024} // 2MB limit
  multiple />
}`,...(pe=(ie=w.parameters)==null?void 0:ie.docs)==null?void 0:pe.source}}};const Je=["Default","SingleFile","ImagesOnly","DocumentsOnly","WithSmallMaxSize","WithCallbacks","Compact","CompactMultiple","CompactSingleFile","CompactWithSmallMaxSize"];export{S as Compact,z as CompactMultiple,C as CompactSingleFile,w as CompactWithSmallMaxSize,f as Default,v as DocumentsOnly,h as ImagesOnly,x as SingleFile,y as WithCallbacks,j as WithSmallMaxSize,Je as __namedExportsOrder,He as default};
